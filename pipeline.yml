trigger:
- main

pool:
  name: Default

jobs:
- job: prepare
  displayName: 'Pre-Build Tasks'
  steps:
  - checkout: self
    fetchDepth: 0
    clean: true

  - task: gitversion/setup@0
    displayName: 'Install GitVersion'
    inputs:
      versionSpec: '5.x.x'

  - task: gitversion/execute@0
    displayName: 'Run GitVersion'
    inputs:
      useConfigFile: true
      configFilePath: 'gitversion.yml'

  - task: PowerShell@2
    name: version
    inputs:
      targetType: 'inline'
      script: |
        Write-Host "Received version: $($env:GITVERSION_SEMVER)"
        Write-Host "##vso[task.setvariable variable=Build.Version;isoutput=true;]$env:GITVERSION_SEMVER"

- job: build
  dependsOn: prepare
  displayName: 'Build Tasks'
  variables:
    CheckDependencies: $[ convertToJson( dependencies ) ]
    Build.Version: $[ dependencies.prepare.outputs['version.Build.Version'] ]
    Build.Counter: $[ counter( dependencies.prepare.outputs['version.Build.Version'], 1 ) ]
  steps:

  - script: echo '$(CheckDependencies)'
    displayName: 'Debug Dependencies'

  - task: PowerShell@2
    inputs:
      targetType: 'inline'
      script: |
        Write-Host $env:Dependencies

        $BuildVersion = $env:Build_Version
        $BuildCounter = $env:Build_Counter

        Write-Host "Found version: $($BuildVersion)"
        Write-Host "Using counter: $($BuildCounter)"

        $BuildNumber = "$($BuildVersion).$($BuildCounter)"

        Write-Host "Setting build number to $($BuildNumber)..."
        Write-Host "##vso[build.updatebuildnumber]$($BuildNumber)"

  - task: NuGetToolInstaller@1
    displayName: 'Install NuGet 6.x.x'
    inputs:
      versionSpec: '6.x.x'

  - task: DotNetCoreCLI@2
    displayName: 'Restore Projects'
    inputs:
      command: 'restore'
      projects: '**/*.csproj'
      feedsToUse: 'select'

  - task: DotNetCoreCLI@2
    displayName: 'Build Projects'
    inputs:
      command: 'build'
      projects: '**/*.csproj'
